<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="vend.dao.VendUserMapper" >
  <resultMap id="BaseResultMap" type="vend.entity.VendUser" >
    <id column="usercode" property="usercode" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="linkman" property="linkman" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="extend1" property="extend1" jdbcType="VARCHAR" />
    <result column="extend2" property="extend2" jdbcType="VARCHAR" />
    <result column="extend3" property="extend3" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    usercode, username, password, role_id, mobile, address, linkman, create_time, update_time, 
    extend1, extend2, extend3
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from vend_user
    where usercode = #{usercode,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from vend_user
    where usercode = #{usercode,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="vend.entity.VendUser" >
    insert into vend_user (usercode, username, password, 
      role_id, mobile, address, 
      linkman, create_time, update_time, 
      extend1, extend2, extend3
      )
    values (#{usercode,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{roleId,jdbcType=INTEGER}, #{mobile,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{linkman,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{extend1,jdbcType=VARCHAR}, #{extend2,jdbcType=VARCHAR}, #{extend3,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="vend.entity.VendUser" >
    insert into vend_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="usercode != null" >
        usercode,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="linkman != null" >
        linkman,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="extend1 != null" >
        extend1,
      </if>
      <if test="extend2 != null" >
        extend2,
      </if>
      <if test="extend3 != null" >
        extend3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="usercode != null" >
        #{usercode,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="linkman != null" >
        #{linkman,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="extend1 != null" >
        #{extend1,jdbcType=VARCHAR},
      </if>
      <if test="extend2 != null" >
        #{extend2,jdbcType=VARCHAR},
      </if>
      <if test="extend3 != null" >
        #{extend3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="vend.entity.VendUser" >
    update vend_user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="linkman != null" >
        linkman = #{linkman,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="extend1 != null" >
        extend1 = #{extend1,jdbcType=VARCHAR},
      </if>
      <if test="extend2 != null" >
        extend2 = #{extend2,jdbcType=VARCHAR},
      </if>
      <if test="extend3 != null" >
        extend3 = #{extend3,jdbcType=VARCHAR},
      </if>
    </set>
    where usercode = #{usercode,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="vend.entity.VendUser" >
    update vend_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=INTEGER},
      mobile = #{mobile,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      linkman = #{linkman,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      extend1 = #{extend1,jdbcType=VARCHAR},
      extend2 = #{extend2,jdbcType=VARCHAR},
      extend3 = #{extend3,jdbcType=VARCHAR}
    where usercode = #{usercode,jdbcType=VARCHAR}
  </update>
    <!-- 一下为自定义方法 -->
  <select id="listVendUser" resultMap="BaseResultMap">
	select
	<include refid="Base_Column_List" />
	from vend_user
	<where>
		<if test="vendUser.username != null and !&quot;&quot;.equals(vendUser.username.trim())">
			and username = #{vendUser.username}
		</if>
		<if test="vendUser.mobile != null and !&quot;&quot;.equals(vendUser.mobile.trim())">
			and mobile = #{vendUser.mobile}
		</if>
		<if test="vendUser.roleId != null and !&quot;&quot;.equals(vendUser.roleId.trim())">
			and role_id = #{vendUser.roleId}
		</if>  
	</where>order by usercode limit #{page.dbIndex},#{page.dbNumber}
  </select>
  
  <select id="countVendUser" resultType="int" parameterType="vend.entity.VendUser">
 	select count(*) from vend_user
 	<where>
 		<if test="username != null and !&quot;&quot;.equals(username.trim())">
		  and username = #{username}
	    </if>
	    <if test="mobile != null and !&quot;&quot;.equals(mobile.trim())">
		  and mobile = #{mobile}
	    </if>
	    <if test="roleId != null and !&quot;&quot;.equals(roleId.trim())">
		  and role_id = #{roleId}
	    </if>
 	</where>
  </select>
  
   <select id="findAll" resultMap="BaseResultMap">
 	select * from vend_user
  </select>
  <!-- 批量添加 -->
  <insert id="insertBatch" parameterType="java.util.List">
	  insert into vend_user (username,password,role_id,mobile,address,linkman,create_time,update_time,extend1,extend2,extend3)
	        values
       <foreach collection="list" item="item" index="index" separator=",">
           (#{item.username,jdbcType=VARCHAR},
            #{item.password,jdbcType=VARCHAR},
            #{item.roleId,jdbcType=INTEGER},
            #{item.mobile,jdbcType=VARCHAR},
            #{item.address,jdbcType=VARCHAR},
            #{item.linkman,jdbcType=VARCHAR},
            #{item.createTime,jdbcType=TIMESTAMP},
            #{item.updateTime,jdbcType=TIMESTAMP},
            #{item.extend1,jdbcType=VARCHAR},
            #{item.extend2,jdbcType=VARCHAR},
            #{item.extend3,jdbcType=VARCHAR}
            )
       </foreach>
  </insert>
  <!-- 批量删除 -->
    <delete id="deleteBatch" parameterType="int">
        delete from vend_user where usercode in
        <foreach item="item" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
</mapper>